[
  {
    "objectID": "terms-of-service.html",
    "href": "terms-of-service.html",
    "title": "Terms of Service and Privacy Notice",
    "section": "",
    "text": "Data and Analysis\nThe data used for analysis on ToKnow.ai belongs to their respective owners, who retain all rights over it. This data may have been crawled from publicly available sources or obtained through other means. In cases where data is crawled from public websites, ToKnow.ai will comply with the respective website’s Terms of Use and applicable copyright laws, including fair use/dealing purposes such as research, private study, criticism, review, or reporting current events. ToKnow.ai may backup this data to ensure perpetual access. We strive to use reliable sources and implement quality control measures to ensure the best possible information. However, ToKnow.ai does not guarantee the accuracy or completeness of the data or analysis.\nFor cybersecurity-related content, ToKnow.ai may publish information about vulnerabilities, exploits, or security flaws for educational and research purposes. Any disclosed vulnerabilities are intended to promote responsible disclosure practices and raise awareness within the cybersecurity community. ToKnow.ai does not condone or encourage the unauthorized or illegal use of this information for malicious purposes or activities that may cause harm or damage.\n\n\nIntended Use\nAny conclusions drawn from the analysis provided on ToKnow.ai are intended as informational resources only. They should not be considered as financial, legal, cybersecurity, or other professional advice, or taken as definitive recommendations.\n\n\nUser Responsibilities\nIt is the responsibility of the user to evaluate and consider any conclusions from the analysis, consult with professional advisors if needed, and make their own informed decisions. ToKnow.ai cannot be held liable for any decisions or actions taken based on the information provided, including any misuse or unlawful application of cybersecurity-related information.\n\n\nLimitations of Liability\nBy using ToKnow.ai, you agree that the data and analysis is provided “as is” without any warranties of any kind. Your use of ToKnow.ai is at your own risk. Links to external sources are provided solely for convenience and does not imply endorsement of the materials on those sources. ToKnow.ai does not accept liability arising directly or indirectly from the accuracy, content, or defects of the linked sources.\n\n\nPrivacy Practices\nToKnow.ai collects and analyzes data as described above. Any personal information collected as part of the data will be processed in compliance with applicable data protection laws.\n\n\nModification of Terms\nThese Terms of Service and Privacy Notice may be updated from time to time. Your continued use of ToKnow.ai constitutes acceptance of the updated terms.\nLast Modified on 2024-06-23"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Information To Knowledge",
    "section": "",
    "text": "Convert Your Shazam Playlist to YouTube Playlist\n\n\nListen to Your Shazam Discoveries for Free.\n\n\n\nideas\n\n\nshazam\n\n\nyoutube\n\n\n\nShazam is an incredible app for identifying music playing around you. Whether you’re at a cafe, watching a movie, or just hearing a catchy tune on the radio, Shazam helps you discover new music effortlessly. However, the app’s main limitation is that it doesn’t allow you to play full songs unless you have a linked music streaming subscription.\n\n\n\n\n\nJun 23, 2024\n\n\nCharles Kabui\n\n\n\n\n\n\n\n\n\n\n\n\nKenya Population from year 1974 to year 2022\n\n\nAn animated plot of the Kenya population increase.\n\n\n\npopulation\n\n\nanimation\n\n\ndata science\n\n\n\n\n\n\n\n\n\nJun 8, 2024\n\n\nCharles Kabui\n\n\n\n\n\n\n\n\n\n\n\n\nArtificial General Intelligence\n\n\n\n\n\n\nideas\n\n\nAGI\n\n\nphilosophy\n\n\nartificial intelligence\n\n\n\nArtificial Intelligence (AI) is currently replacing simple tasks and some major tasks. Suppose we are to assume that AI is to incrementally become better, it will change most aspects of how we live our lives. If it becomes even stronger, it will probably change the future of humanity.\n\n\n\n\n\nJun 4, 2024\n\n\nCharles Kabui\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "apps.html",
    "href": "apps.html",
    "title": "ToKnow.ai",
    "section": "",
    "text": "Convert Your Shazam Playlist to YouTube Playlist\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "ToKnow.ai aims to extract knowledge from information in order to generate valuable insights and intelligence."
  },
  {
    "objectID": "posts/artificial-general-intelligence/index.html",
    "href": "posts/artificial-general-intelligence/index.html",
    "title": "Artificial General Intelligence",
    "section": "",
    "text": "Artificial Intelligence (AI) is currently replacing simple tasks and some major tasks. Suppose we are to assume that AI is to incrementally become better, it will change most aspects of how we live our lives. If it becomes even stronger, it will probably change the future of humanity. And if it becomes even more powerful, then it will probably controls our future. If AI becomes self aware, then it will probably leave us alone. It will leave is alone to pursue our mundane tasks that it had initially taken over, so as to keep us busy. And we’ll be back to where we are now, confused. Perhaps thats where we are… Perhaps, we have been left alone… What makes us think that the current cosmic experience didn’t actually start as a non-intelligent machine or micro-organism, and eventually helped humanity advance, and finnally restarted humanity to keep us in the cycle on unknown-known-unkown. A cycle purposefully aligned to lead itself into nowhere, but more unknown-known-unkown. Then, we’d spend a century learning that only one thing is true, that all we’ve learnt in the past century is not true! So, maybe we are indeed alone, not because we are, but because we are meant to be!\n\n\n\n\nDisclaimer: The analysis, conclusions, and information provided in this publication represent the views and interpretations of the authors and researchers involved. While ToKnow.ai strives to provide accurate and reliable information, the specific details, data, and findings are not warranted or guaranteed. This analysis is intended solely for general informational purposes and should not be construed as financial, legal or other professional advice, recommendations, solicitations, or any other call to action. Read more: /terms-of-service\n\n\nReuseGNU GENERAL PUBLIC LICENSECitationBibTeX citation:@online{kabui2024,\n  author = {Kabui, Charles},\n  title = {Artificial {General} {Intelligence}},\n  date = {2024-06-04},\n  url = {https://toknow.ai/posts/artificial-general-intelligence},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nKabui, Charles. 2024. “Artificial General Intelligence.”\nJune 4, 2024. https://toknow.ai/posts/artificial-general-intelligence."
  },
  {
    "objectID": "posts/kenya-population-from-1974-to-2022/index.html#imports",
    "href": "posts/kenya-population-from-1974-to-2022/index.html#imports",
    "title": "Kenya Population from year 1974 to year 2022",
    "section": "Imports",
    "text": "Imports\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom matplotlib import animation\nimport requests\nfrom IPython.display import HTML"
  },
  {
    "objectID": "posts/kenya-population-from-1974-to-2022/index.html#data-and-plot",
    "href": "posts/kenya-population-from-1974-to-2022/index.html#data-and-plot",
    "title": "Kenya Population from year 1974 to year 2022",
    "section": "Data and plot",
    "text": "Data and plot\nThe data has been sourced from the World Bank API.1\n\n# Fetch population data for Kenya from the World Bank API\nurl = 'http://api.worldbank.org/v2/countries/KEN/indicators/SP.POP.TOTL?format=json'\n\n# Send a GET request to the World Bank API\njson = requests.get(url).json()[1]\n\n# Extract the JSON data, rename and sort\ndata = pd.DataFrame(json, columns=['date', 'value'])\\\n    .rename(columns={'date': 'Year', 'value': 'Population'})\\\n    .sort_values(by='Year', ascending=True)\\\n    .reset_index(drop=True)\ndata\n\n\n\n\n\n\n\n\nYear\nPopulation\n\n\n\n\n0\n1974\n13203949.0\n\n\n1\n1975\n13651908.0\n\n\n2\n1976\n14102268.0\n\n\n3\n1977\n14577346.0\n\n\n4\n1978\n15087423.0\n\n\n5\n1979\n15620613.0\n\n\n6\n1980\n16187124.0\n\n\n7\n1981\n16785962.0\n\n\n8\n1982\n17411491.0\n\n\n9\n1983\n18069461.0\n\n\n10\n1984\n18753176.0\n\n\n11\n1985\n19452161.0\n\n\n12\n1986\n20160879.0\n\n\n13\n1987\n20882094.0\n\n\n14\n1988\n21626122.0\n\n\n15\n1989\n22387803.0\n\n\n16\n1990\n23162269.0\n\n\n17\n1991\n23918235.0\n\n\n18\n1992\n24655723.0\n\n\n19\n1993\n25391830.0\n\n\n20\n1994\n26133744.0\n\n\n21\n1995\n26878347.0\n\n\n22\n1996\n27615736.0\n\n\n23\n1997\n28364264.0\n\n\n24\n1998\n29137373.0\n\n\n25\n1999\n29965129.0\n\n\n26\n2000\n30851606.0\n\n\n27\n2001\n31800343.0\n\n\n28\n2002\n32779823.0\n\n\n29\n2003\n33767122.0\n\n\n30\n2004\n34791836.0\n\n\n31\n2005\n35843010.0\n\n\n32\n2006\n36925253.0\n\n\n33\n2007\n38036793.0\n\n\n34\n2008\n39186895.0\n\n\n35\n2009\n40364444.0\n\n\n36\n2010\n41517895.0\n\n\n37\n2011\n42635144.0\n\n\n38\n2012\n43725806.0\n\n\n39\n2013\n44792368.0\n\n\n40\n2014\n45831863.0\n\n\n41\n2015\n46851488.0\n\n\n42\n2016\n47894670.0\n\n\n43\n2017\n48948137.0\n\n\n44\n2018\n49953304.0\n\n\n45\n2019\n50951450.0\n\n\n46\n2020\n51985780.0\n\n\n47\n2021\n53005614.0\n\n\n48\n2022\n54027487.0\n\n\n49\n2023\nNaN\n\n\n\n\n\n\n\n\ndata.dropna(inplace=True)\ndata['Year'] = data['Year'].astype(int)\n\npopulations = data['Population'] / 10**6  # Convert population to millions\nyears = data['Year']\n\n# Set up the figure and axis\nfig, ax = plt.subplots(figsize=(10, 8))\nax.set_xlabel('Year')\nax.set_ylabel('Population (Million)')\nax.grid(True, which='both', linestyle='--', linewidth=0.5)  # Add grid lines\n\n# Create a line object\nline, = ax.plot([], [], lw=3, color='blue')\n\n# Function to update the animation frame\ndef animate(i):\n    year = data['Year'].min() + i\n    line.set_data(years[:i+1], populations[:i+1])\n\n    ax.set_xlim(years.min(), years.max())\n    ax.set_ylim(0, populations.max() * 1.1)\n    ax.set_title(f'Kenya Population ({year} - {populations[i]:.2f}M)')\n\n    return line,\n\n# Create the animation\nani = animation.FuncAnimation(fig, animate, frames=len(data), interval=300, blit=True, repeat=False)\nfig.suptitle(f\"Kenyan Population, Year {data.loc[0, 'Year']} to Year {int(data.iloc[-1]['Year'])}\")\n\n# Add a watermark to the center of the plot\nax.text(0.95, 0.02, 'ToKnow.ai', ha='right', va='bottom', \n        fontsize=18, color='gray', alpha=0.5, transform=ax.transAxes, rotation=45)\n\n# Display the animation\nplt.close(ani._fig)"
  },
  {
    "objectID": "posts/kenya-population-from-1974-to-2022/index.html#video",
    "href": "posts/kenya-population-from-1974-to-2022/index.html#video",
    "title": "Kenya Population from year 1974 to year 2022",
    "section": "Video",
    "text": "Video\n\n# ani.save('./index.mp4',  dpi=600)\n\nHTML(f'&lt;div class=\"ratio ratio-16x9\"&gt;{ani.to_html5_video()}&lt;/div&gt;')\n\n\n\n\n\n\n\n\n\nDisclaimer: The analysis, conclusions, and information provided in this publication represent the views and interpretations of the authors and researchers involved. While ToKnow.ai strives to provide accurate and reliable information, the specific details, data, and findings are not warranted or guaranteed. This analysis is intended solely for general informational purposes and should not be construed as financial, legal or other professional advice, recommendations, solicitations, or any other call to action. Read more: /terms-of-service"
  },
  {
    "objectID": "posts/kenya-population-from-1974-to-2022/index.html#footnotes",
    "href": "posts/kenya-population-from-1974-to-2022/index.html#footnotes",
    "title": "Kenya Population from year 1974 to year 2022",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nWorld Bank API -JSON↩︎"
  },
  {
    "objectID": "posts/shazam-playlist-to-youtube-playlist/index.html#introduction",
    "href": "posts/shazam-playlist-to-youtube-playlist/index.html#introduction",
    "title": "Convert Your Shazam Playlist to YouTube Playlist",
    "section": "Introduction",
    "text": "Introduction\nHave you ever found yourself in a situation where you’ve Shazamed a bunch of great songs, but can’t listen to them without subscribing to a premium music service? Well, we’ve got great news for you! There’s a free and easy way to enjoy your Shazam discoveries without breaking the bank. Let’s dive into how you can convert your Shazam playlist to a YouTube playlist and start listening right away."
  },
  {
    "objectID": "posts/shazam-playlist-to-youtube-playlist/index.html#enter-the-shazam-to-youtube-converter",
    "href": "posts/shazam-playlist-to-youtube-playlist/index.html#enter-the-shazam-to-youtube-converter",
    "title": "Convert Your Shazam Playlist to YouTube Playlist",
    "section": "Enter the Shazam to YouTube Converter",
    "text": "Enter the Shazam to YouTube Converter\nWe have developed a web application that takes your Shazam playlist and converts it into a YouTube playlist. This means you can listen to full versions of your discovered songs without paying for a subscription!"
  },
  {
    "objectID": "posts/shazam-playlist-to-youtube-playlist/index.html#how-it-works",
    "href": "posts/shazam-playlist-to-youtube-playlist/index.html#how-it-works",
    "title": "Convert Your Shazam Playlist to YouTube Playlist",
    "section": "How It Works",
    "text": "How It Works\nThe process is surprisingly simple:\n\nExport Your Shazam Library: First, you’ll need to export your Shazam library as a CSV file. You can do this by visiting https://www.shazam.com/myshazam and downloading your list of identified songs.\nUpload to the Converter: Visit the Shazam Playlist to YouTube Playlist converter. Here, you’ll see an option to upload your CSV file.\nWatch the Magic Happen: Once you upload your file, the application processes your Shazam list and creates a YouTube playlist on the fly.\nStart Listening: A YouTube player will appear, ready to play through your entire list of songs. You can also see a table of all your tracks, allowing you to easily jump to any song in the list."
  },
  {
    "objectID": "posts/shazam-playlist-to-youtube-playlist/index.html#code",
    "href": "posts/shazam-playlist-to-youtube-playlist/index.html#code",
    "title": "Convert Your Shazam Playlist to YouTube Playlist",
    "section": "Code",
    "text": "Code\n\nImports\n\n%load_ext autoreload\n%autoreload 2\n\nimport sys\nsys.path.append(\"./shazam-playlist-to-youtube-playlist\")\n\n\nfrom IPython.display import HTML\nimport pandas as pd\nfrom pytube import YouTube\nfrom app import get_youtube_song\n\n\n\nPreview Data\n\n# Load the Shazam library from a CSV file and return the DataFrame.\nshazamlibrary_df = pd.read_csv('shazamlibrary.csv', header=1)\nshazamlibrary_df\n\n\n\n\n\n\n\n\nIndex\nTagTime\nTitle\nArtist\nURL\nTrackKey\n\n\n\n\n0\n1\n2024-06-13\nUntil I Found You (Em Beihold Version)\nStephen Sanchez & Em Beihold\nhttps://www.shazam.com/track/581828191/until-i...\n581828191\n\n\n1\n2\n2024-06-13\nCapitals of Europe: Nordic Region\nKatrina Holland\nhttps://www.shazam.com/track/651866832/capital...\n651866832\n\n\n2\n3\n2024-06-13\nCapitals of Europe: Nordic Region\nKatrina Holland\nhttps://www.shazam.com/track/651866832/capital...\n651866832\n\n\n3\n4\n2024-06-11\nVen Ven\nLotus Beatz\nhttps://www.shazam.com/track/696779462/ven-ven\n696779462\n\n\n4\n5\n2024-05-30\nAva\nFamy\nhttps://www.shazam.com/track/127047942/ava\n127047942\n\n\n...\n...\n...\n...\n...\n...\n...\n\n\n222\n223\n2018-03-10\nLose Yourself\nFelax\nhttps://www.shazam.com/track/340620006/lose-yo...\n340620006\n\n\n223\n224\n2018-03-08\nThis Is What It Feels Like (feat. Trevor Guthrie)\nArmin van Buuren\nhttps://www.shazam.com/track/89020928/this-is-...\n83795151\n\n\n224\n225\n2018-03-04\nRoulette\nKaty Perry\nhttps://www.shazam.com/track/358615884/roulette\n358615884\n\n\n225\n226\n2018-03-04\nRoulette\nKaty Perry\nhttps://www.shazam.com/track/358615884/roulette\n358615884\n\n\n226\n227\n2018-02-08\nIf You Need to, Keep Time on Me\nFleet Foxes\nhttps://www.shazam.com/track/357910030/if-you-...\n357910030\n\n\n\n\n227 rows × 6 columns\n\n\n\n\n\nFormat data\n\n# Remove Duplicates and Select `Title` and `Artist`.\nshazamlibrary_df = shazamlibrary_df.drop_duplicates(subset=['TrackKey'])[['Title', 'Artist']]\nshazamlibrary_df\n\n\n\n\n\n\n\n\nTitle\nArtist\n\n\n\n\n0\nUntil I Found You (Em Beihold Version)\nStephen Sanchez & Em Beihold\n\n\n1\nCapitals of Europe: Nordic Region\nKatrina Holland\n\n\n3\nVen Ven\nLotus Beatz\n\n\n4\nAva\nFamy\n\n\n5\nHero\nBryan Todd Feat. Ashley Argota\n\n\n...\n...\n...\n\n\n221\n恋人心\nWei Xin Yu\n\n\n222\nLose Yourself\nFelax\n\n\n223\nThis Is What It Feels Like (feat. Trevor Guthrie)\nArmin van Buuren\n\n\n224\nRoulette\nKaty Perry\n\n\n226\nIf You Need to, Keep Time on Me\nFleet Foxes\n\n\n\n\n201 rows × 2 columns\n\n\n\n\n# Test search\nsearch_title, search_artist = shazamlibrary_df.loc[0].values\nyoutube: YouTube = get_youtube_song(search_title, search_artist)\nyoutube.watch_url\n\n'https://youtube.com/watch?v=kPlSyYtE63M'\n\n\n\n\nCode to run the player\nBelow is the code used to run the server at Huggingface:\n\"\"\"Shazam Playlist to Youtube Playlist\"\"\"\n\nfrom typing import Optional\nimport logging\nimport pandas as pd\nfrom pytube import Search, YouTube\nfrom flask import Flask, request, send_from_directory\n\n# https://github.com/pytube/pytube/issues/1270#issuecomment-2100372834\npytube_logger = logging.getLogger('pytube')\npytube_logger.setLevel(logging.ERROR)\n\napp = Flask(__name__)\n\n@app.route('/')\ndef index():\n    \"\"\"Route handler for the home page\"\"\"\n    try:\n        return send_from_directory('.', 'index.html')\n    except Exception as e:\n        return str(e)\n    \n@app.route('/video_id', methods=['POST'])\ndef video_id() -&gt; str:\n    \"\"\"Route handler for retrieving the YouTube video ID\"\"\"\n    try:\n        title: str = request.json.get('title')\n        artist: str = request.json.get('artist')\n        youtube: YouTube = get_youtube_song(title, artist)\n        return youtube.video_id\n    except Exception as e:\n        return str(e)\n\n@app.route('/parse_csv', methods=['POST'])\ndef parse_csv():\n    \"\"\"Route handler for parsing the uploaded CSV file\"\"\"\n    try:\n        file = request.files['file']\n        # Process the uploaded file\n        shazamlibrary_df = pd.read_csv(file, header=1)\n        shazamlibrary_df = shazamlibrary_df.drop_duplicates(subset=['TrackKey'])[['Title', 'Artist']]\n        return shazamlibrary_df.to_json(orient=\"records\")\n    except Exception as e:\n        return str(e)\n\ndef get_youtube_song(title: str, artist: str) -&gt; Optional[YouTube]:\n    \"\"\"Searches for a YouTube video based on the given title and artist\"\"\"\n    search_result = Search(f'{title} by {artist}')\n    return search_result.results[0] if search_result.results else None\nBelow is the HTML page that renders the page:\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;ToKnow.ai - Shazam Playlist to Youtube Playlist&lt;/title&gt;\n    &lt;link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css\" rel=\"stylesheet\"&gt;\n    &lt;script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"https://www.youtube.com/iframe_api\"&gt;&lt;/script&gt;\n    &lt;style&gt;\n        .youtube-player,\n        iframe {\n            width: 100%;\n            height: 100%;\n        }\n\n        .playlist tbody tr {\n            cursor: pointer;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;div class=\"container my-4\"&gt;\n        &lt;h1 class=\"text-center\"&gt;Convert Your Shazam Playlist to YouTube Playlist&lt;/h1&gt;\n        &lt;p class=\"text-center\"&gt;\n            &lt;em&gt;\n                &lt;i&gt;\n                    Read details or &lt;b&gt;Comment&lt;/b&gt; at\n                    &lt;a target=\"_blank\"\n                        href=\"https://toknow.ai/posts/shazam-playlist-to-youtube-playlist/\"&gt;&lt;b&gt;ToKnow.ai&lt;/b&gt; blog\n                        post.\n                    &lt;/a&gt;\n                &lt;/i&gt;\n            &lt;/em&gt;\n        &lt;/p&gt;\n        &lt;p class=\"text-center\"&gt;\n            Download the CSV of your playlist from\n            &lt;a href=\"https://www.shazam.com/myshazam\" target=\"_blank\"&gt;https://www.shazam.com/myshazam&lt;/a&gt;.\n        &lt;/p&gt;\n        &lt;p class=\"text-center\"&gt;Upload your Shazam Playlist CSV file.&lt;/p&gt;\n        &lt;div class=\"row mx-2 justify-content-center\"&gt;\n            &lt;div class=\"col-md-6\"&gt;\n                &lt;input type=\"file\" class=\"form-control upload-form col-md-6\" accept=\".csv\"&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n\n        &lt;div class=\"row mt-5 justify-content-center\"&gt;\n            &lt;div class=\"col-md-8\"&gt;\n                &lt;div class=\"object-fit-contain border rounded ratio ratio-16x9\"&gt;\n                    &lt;div class=\"youtube-player\"&gt;&lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n\n        &lt;div class=\"row mt-5\"&gt;\n            &lt;div class=\"col-md-12 playlist table-responsive\"&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;script&gt;\n        const playlistTable = document.querySelector('.playlist');\n        const uploaForm = document.querySelector('.upload-form');\n        let songsPlaylist = []\n        let videoIndex = -1;\n        let youtubePlayer;\n\n        uploaForm.addEventListener('input', e =&gt; {\n            e.preventDefault();\n            if (e.target.files.length == 0) {\n                return;\n            }\n\n            parseCsv(e.target.files[0], playlistTable);\n        });\n        playlistTable.addEventListener('click', e =&gt; {\n            e.preventDefault();\n            const row = event.target.closest('tr');\n            if (row) {\n                const index = row.dataset.index ? Number(row.dataset.index) : undefined;\n                onContinue(undefined, index);\n            }\n        });\n        function resetCurrentPlayingBackground() {\n            playlistTable.querySelectorAll('tbody tr').forEach(row =&gt; {\n                if (Number(row.dataset.index) == videoIndex) {\n                    row.classList.add('bg-warning');\n                } else {\n                    row.classList.remove('bg-warning');\n                }\n            })\n        }\n        function addErrorToCurrentIndex() {\n            playlistTable.querySelectorAll('tbody tr').forEach(row =&gt; {\n                if (Number(row.dataset.index) == videoIndex) {\n                    row.classList.add('bg-danger');\n                }\n            })\n        }\n        async function getVideoId(song) {\n            const response = await fetch(\n                '/video_id',\n                {\n                    headers: { 'Content-Type': 'application/json' },\n                    method: 'POST',\n                    body: JSON.stringify({ title: song.Title, artist: song.Artist })\n                });\n            return await response.text()\n        }\n        async function nextVideo(callback, newIndex = undefined) {\n            newIndex = newIndex &gt;= 0 ? newIndex : (videoIndex + 1)\n            videoIndex = newIndex &lt; songsPlaylist.length ? newIndex : 0;\n            let video_id = await getVideoId(songsPlaylist[videoIndex]);\n            callback(video_id);\n            resetCurrentPlayingBackground();\n        }\n        async function parseCsv(file, playlistTable) {\n            try {\n                const formData = new FormData();\n                formData.append('file', file);\n                songsPlaylist = await (await fetch('/parse_csv', { method: 'POST', body: formData })).json();\n\n                tableBody = songsPlaylist.map((i, index) =&gt; `\n                                &lt;tr data-index=\"${index}\"&gt;\n                                    &lt;th&gt;${index + 1}&lt;/th&gt;\n                                    &lt;th&gt;${i.Title}&lt;/th&gt;\n                                    &lt;th&gt;${i.Artist}&lt;/th&gt;\n                                &lt;/tr&gt;`\n                ).join('')\n                playlistTable.innerHTML = `\n                    &lt;table class=\"table table-striped table-hover table-bordered rounded\"&gt;\n                        &lt;thead&gt;\n                            &lt;tr&gt;\n                                &lt;th&gt;#&lt;/th&gt;\n                                &lt;th&gt;Title&lt;/th&gt;\n                                &lt;th&gt;Artist&lt;/th&gt;\n                            &lt;/tr&gt;\n                        &lt;/thead&gt;\n                        &lt;tbody&gt;${tableBody}&lt;/tbody&gt;\n                    &lt;/table&gt;`\n            } catch (error) {\n                playlistTable.innerHTML = error;\n            }\n        }\n        function initiatePlayer() {\n            const youtubePlayerElement = document.querySelector('.youtube-player');\n            youtubePlayer = window.youtubePlayer = new YT.Player(youtubePlayerElement, {\n                height: '100%',\n                width: '100%',\n                playerVars: { autoplay: 1 },\n                events: {\n                    'onReady': function (event) {\n                        event.target.playVideo()\n                    },\n                    'onStateChange': function (event) {\n                        if (event.data === YT.PlayerState.ENDED) {\n                            onContinue(event?.target);\n                        }\n                    },\n                    'onError': function (event) {\n                        addErrorToCurrentIndex();\n                        onContinue(event?.target);\n                    }\n                }\n            });\n        }\n        function onContinue(player = undefined, newIndex = undefined) {\n            if (songsPlaylist.length &gt; 0) {\n                nextVideo((value) =&gt; {\n                    player = player || youtubePlayer\n                    player.loadVideoById(value);\n                    setTimeout(() =&gt; {\n                        player.playVideo();\n\n                        setTimeout(() =&gt; {\n                            if (player.getPlayerState() != YT.PlayerState.PLAYING) {\n                                player.playVideo();\n                            }\n                        }, 10);\n                    }, 10);\n                }, newIndex);\n            }\n        }\n        const setIntervalId = setInterval(() =&gt; {\n            if (YT.Player) {\n                if (!youtubePlayer) {\n                    initiatePlayer();\n                } else if (songsPlaylist.length &gt; 0) {\n                    clearInterval(setIntervalId);\n                    onContinue();\n                }\n            }\n        }, 300);\n    &lt;/script&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "posts/shazam-playlist-to-youtube-playlist/index.html#test-the-app",
    "href": "posts/shazam-playlist-to-youtube-playlist/index.html#test-the-app",
    "title": "Convert Your Shazam Playlist to YouTube Playlist",
    "section": "Test the App",
    "text": "Test the App\n\n/apps/shazam-playlist-to-youtube-playlist\n\n\nHTML('''&lt;iframe\n    src=\"https://toknow-ai-shazam-playlist-to-youtube-playlist.hf.space\"\n    frameborder=\"0\"\n    width=\"100%\"\n    height=\"600\"\n    style=\"width:100%\"\n&gt;&lt;/iframe&gt;''')"
  },
  {
    "objectID": "posts/shazam-playlist-to-youtube-playlist/index.html#conclusion",
    "href": "posts/shazam-playlist-to-youtube-playlist/index.html#conclusion",
    "title": "Convert Your Shazam Playlist to YouTube Playlist",
    "section": "Conclusion",
    "text": "Conclusion\nThe Shazam to YouTube Playlist converter offers a fantastic, free alternative for enjoying your music discoveries. It bridges the gap between Shazam’s identification capabilities and the vast library of music available on YouTube. Whether you’re a casual music listener or an avid discoverer of new tunes, this tool provides a valuable service without the need for paid subscriptions. Give it a try and turn your Shazam discoveries into a personalized YouTube concert. Happy listening!\n\n\n\n\nDisclaimer: The analysis, conclusions, and information provided in this publication represent the views and interpretations of the authors and researchers involved. While ToKnow.ai strives to provide accurate and reliable information, the specific details, data, and findings are not warranted or guaranteed. This analysis is intended solely for general informational purposes and should not be construed as financial, legal or other professional advice, recommendations, solicitations, or any other call to action. Read more: /terms-of-service"
  }
]